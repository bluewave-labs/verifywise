# SSO Configuration Environment Variables
# Copy this file to .env and fill in the required values

# SSO Encryption Key - REQUIRED for SSO functionality
# Must be exactly 32 characters for AES-256-CBC encryption
# Generate a secure random key: openssl rand -hex 16
SSO_ENCRYPTION_KEY=your_32_character_encryption_key_here

# SSO State Token Secret - REQUIRED and SEPARATE from JWT_SECRET
# Used for CSRF-protected state tokens in OAuth flow
# Generate a secure random key: openssl rand -hex 32
SSO_STATE_SECRET=your_separate_state_token_secret_here

# Application URLs - Required for OAuth flow
FRONTEND_URL=http://localhost:3001
BACKEND_URL=http://localhost:3000

# Cookie Configuration for Production
# Only required in production environments
COOKIE_DOMAIN=.yourdomain.com
NODE_ENV=production

# JWT Secret - Should already be configured
JWT_SECRET=your_jwt_secret_here

# Database Configuration - Should already be configured
DB_HOST=localhost
DB_PORT=5432
DB_NAME=verifywise
DB_USER=your_db_user
DB_PASSWORD=your_db_password

# Azure AD Application Registration Details
# These will be stored encrypted in the database per organization
# AZURE_CLIENT_ID=your_azure_client_id
# AZURE_CLIENT_SECRET=your_azure_client_secret
# AZURE_TENANT_ID=your_azure_tenant_id

# Azure AD URLs (These are dynamic based on cloud environment)
# Public Cloud: https://login.microsoftonline.com/
# Government Cloud: https://login.microsoftonline.us/

# Production Security Notes:
# 1. Use HTTPS in production (NODE_ENV=production enables secure cookies)
# 2. Set COOKIE_DOMAIN to your actual domain
# 3. Generate a cryptographically secure SSO_ENCRYPTION_KEY
# 4. Ensure JWT_SECRET is secure and different from encryption key
# 5. Store Azure AD secrets in database, not environment variables
# 6. Use strong database passwords and restrict database access
# 7. Configure proper CORS origins in ALLOWED_ORIGINS