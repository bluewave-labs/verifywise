openapi: 3.0.0
info:
  title: VerifyWise API
  description: |
    ## Overview
    The VerifyWise API enables programmatic access to AI compliance management features including project management, risk assessments, vendor management, and compliance framework implementations (EU AI Act, ISO 42001, ISO 27001).

    ## Getting Started
    
    ### 1. Authentication
    Most endpoints require JWT authentication. Follow these steps:
    
    1. **Register a new user** (if needed):
       ```
       POST {baseUrl}/api/users/register
       {
         "name": "John",
         "surname": "Doe", 
         "email": "user@example.com",
         "password": "SecurePassword123!"
       }
       ```
    
    2. **Login to receive tokens**:
       ```
       POST {baseUrl}/api/users/login
       {
         "email": "user@example.com",
         "password": "SecurePassword123!"
       }
       ```
       
       Response includes:
       ```json
       {
         "message": "ok",
         "data": {
           "user": {...},
           "accessToken": "eyJhbGciOiJIUzI1NiIs...",
           "refreshToken": "eyJhbGciOiJIUzI1NiIs..."
         }
       }
       ```
    
    3. **Use the access token** in subsequent requests:
       ```
       Authorization: Bearer eyJhbGciOiJIUzI1NiIs...
       ```
    
    4. **Refresh tokens** when access token expires:
       ```
       POST {baseUrl}/api/users/refresh-token
       {
         "refreshToken": "your_refresh_token_here"
       }
       ```

    ### 2. Common Workflows
    
    **Creating a Project:**
    1. POST /api/projects - Create project
    2. POST /api/projects/{id}/frameworks - Associate compliance frameworks
    3. GET /api/controls - Retrieve framework controls
    4. POST /api/assessments - Create assessments

    **Managing Vendors:**
    1. POST /api/vendors - Add vendor
    2. POST /api/vendorRisks - Assess vendor risks
    3. PUT /api/vendors/{id} - Update vendor status

    ### 3. Response Format
    All responses follow a consistent structure:
    
    **Success Response:**
    ```json
    {
      "message": "ok",
      "data": {...}
    }
    ```
    
    **Error Response:**
    ```json
    {
      "message": "Error type",
      "data": "Error details",
      "error": {...}
    }
    ```

    ### 4. Common Error Codes
    - `400` Bad Request - Invalid input parameters
    - `401` Unauthorized - Missing or invalid authentication
    - `403` Forbidden - Insufficient permissions
    - `404` Not Found - Resource doesn't exist
    - `409` Conflict - Resource already exists
    - `429` Too Many Requests - Rate limit exceeded
    - `500` Internal Server Error - Server-side error
    - `503` Service Unavailable - Service temporarily down

    ### 5. Rate Limiting
    API requests are limited to 100 requests per minute per user. Rate limit headers are included in responses:
    - `X-RateLimit-Limit`: Maximum requests allowed
    - `X-RateLimit-Remaining`: Requests remaining
    - `X-RateLimit-Reset`: Time when limit resets

    ### 6. Multi-Tenancy
    The API supports multi-tenant architecture. User's organization context is automatically determined from JWT token.

  version: 1.0.0

servers:
  - url: "{protocol}://{host}:{port}/api"
    description: Configurable server
    variables:
      protocol:
        default: http
        enum:
          - http
          - https
      host:
        default: localhost
      port:
        default: "3000"

paths:
  /assessments:
    get:
      summary: Returns a list of all the assessments
      tags: [assessments]
      security:
        - JWTAuth: []
      responses:
        "200":
          description: list of all assessments
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Assessment"
        "204":
          description: no content to display
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: no content
                data:
                  type: object
        "500":
          $ref: "#/components/responses/InternalServerError"
    post:
      summary: Create a new compliance assessment
      description: Creates a new assessment tracker for a specific project to monitor compliance progress against regulatory frameworks
      tags: [assessments]
      security:
        - JWTAuth: []
      requestBody:
        description: body of the new assessment
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                projectId:
                  type: integer
                  example: 1
        required: true
      responses:
        "201":
          description: new created assessment tracker
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: created
                data:
                  type: object
                  $ref: "#/components/schemas/Assessment"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
  /assessments/{id}:
    get:
      summary: Retrieve assessment by ID
      description: Get detailed information about a specific assessment including its current status, progress, and associated project data
      tags: [assessments]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the assessment
      responses:
        "200":
          description: assessment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    $ref: "#/components/schemas/Assessment"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    put:
      summary: Update assessment by ID
      description: Update an existing assessment's details, status, or progress information
      tags: [assessments]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the assessment
      requestBody:
        description: body of the new assessment
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                projectId:
                  type: integer
                  example: 1
        required: true
      responses:
        "202":
          description: assessment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: accepted
                  data:
                    $ref: "#/components/schemas/Assessment"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    delete:
      summary: Delete assessment by ID
      description: Remove an assessment from the system. This action cannot be undone
      tags: [assessments]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the assessment to delete
      responses:
        "202":
          description: assessment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: accepted
                  data:
                    type: boolean
                    example: true
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /assessments/getAnswers/{id}:
    get:
      summary: Get assessment answers by ID
      description: Retrieve all answers and responses associated with a specific assessment, including completion status and detailed responses
      tags: [assessments]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the assessment
      responses:
        "200":
          description: assessment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    $ref: "#/components/schemas/Assessment"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /controls:
    get:
      summary: List all compliance controls
      description: Retrieve all available compliance controls from various frameworks (EU AI Act, ISO 42001, ISO 27001) with their requirements and implementation guidelines
      tags: [controls]
      security:
        - JWTAuth: []
      responses:
        "200":
          description: list of all controls
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Control"
        "204":
          description: no content to display
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: no content
                data:
                  type: object
        "500":
          $ref: "#/components/responses/InternalServerError"
    post:
      tags: [controls]
      security:
        - JWTAuth: []
      requestBody:
        description: body of the new control
        content:
          application/json:
            schema:
              type: object
              properties:
                projectId:
                  type: integer
                  example: 1
                status:
                  type: string
                  example: "In Progress"
                approver:
                  type: string
                  example: "John Doe"
                riskReview:
                  type: string
                  example: "Acceptable risk"
                owner:
                  type: string
                  example: "Bob Johnson"
                reviewer:
                  type: string
                  example: "Alice Williams"
                dueDate:
                  type: string
                  format: date-time
                  example: "2024-09-20T00:00:00.000Z"
                implementationDetails:
                  type: string
                  example: "Implement new feature"
                controlGroup:
                  type: integer
                  example: 1
        required: true
      responses:
        "201":
          description: new created control
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: created
                data:
                  type: object
                  $ref: "#/components/schemas/Control"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
  /controls/{id}:
    get:
      summary: Get compliance control by ID
      description: Retrieve detailed information about a specific compliance control including its requirements, implementation guidance, and associated framework
      tags: [controls]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the control
      responses:
        "200":
          description: control
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    $ref: "#/components/schemas/Control"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    put:
      summary: Update compliance control
      description: Update the details, status, or implementation information of a specific compliance control
      tags: [controls]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the control
      requestBody:
        description: body of the new control
        content:
          application/json:
            schema:
              type: object
              properties:
                projectId:
                  type: integer
                  example: 1
                status:
                  type: string
                  example: "In Progress"
                approver:
                  type: string
                  example: "John Doe"
                riskReview:
                  type: string
                  example: "Acceptable risk"
                owner:
                  type: string
                  example: "Bob Johnson"
                reviewer:
                  type: string
                  example: "Alice Williams"
                dueDate:
                  type: string
                  format: date-time
                  example: "2024-09-20T00:00:00.000Z"
                implementationDetails:
                  type: string
                  example: "Implement new feature"
                controlGroup:
                  type: integer
                  example: 1
        required: true
      responses:
        "202":
          description: control
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: accepted
                  data:
                    $ref: "#/components/schemas/Control"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    delete:
      summary: Delete compliance control
      description: Remove a compliance control from the system. This action cannot be undone and may affect related assessments
      tags: [controls]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the control to delete
      responses:
        "202":
          description: control
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: accepted
                  data:
                    type: boolean
                    example: true
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /projects:
    get:
      summary: List all compliance projects
      description: Retrieve all compliance projects in the organization, including their status, associated frameworks, risk levels, and progress information
      tags: [projects]
      security:
        - JWTAuth: []
      responses:
        "200":
          description: list of all projects
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Project"
        "204":
          description: no content to display
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: no content
                data:
                  type: object
        "500":
          $ref: "#/components/responses/InternalServerError"
    post:
      summary: Create new compliance project
      description: Create a new compliance project with specified frameworks, risk classification, and project details for AI system compliance management
      tags: [projects]
      security:
        - JWTAuth: []
      requestBody:
        description: body of the new project
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  example: 1
                project_title:
                  type: string
                  example: "AI Compliance Checker"
                owner:
                  type: integer
                  example: 1
                users:
                  type:
                  example:
                start_date:
                  type: string
                  format: date-time
                  example: "2023-01-15T00:00:00.000Z"
                ai_risk_classification:
                  anyOf:
                    - type: string
                      enum:
                        - "high risk"
                        - "limited risk"
                        - "minimal risk"
                  example: "high risk"
                type_of_high_risk_role:
                  anyOf:
                    - type: string
                      enum:
                        - "deployer"
                        - "provider"
                        - "distributor"
                        - "importer"
                        - "product manufacturer"
                        - "authorized representative"
                  example: "deployer"
                goal:
                  type: string
                  example: "To ensure compliance with AI governance standards"
                last_updated_by:
                  type: integer
                  example: 1
        required: true
      responses:
        "201":
          description: new created project
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: created
                data:
                  type: object
                  $ref: "#/components/schemas/Project"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
  /projects/{id}:
    get:
      summary: Get project by ID
      description: Retrieve detailed information about a specific compliance project including frameworks, assessments, risks, and current compliance status
      tags: [projects]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the project
      responses:
        "200":
          description: project
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    $ref: "#/components/schemas/Project"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    put:
      summary: Update project by ID
      description: Update project details, frameworks, risk classification, or other project-specific information
      tags: [projects]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the project
      requestBody:
        description: body of the new project
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  example: 1
                project_title:
                  type: string
                  example: "AI Compliance Checker"
                owner:
                  type: integer
                  example: 1
                users:
                  type:
                  example:
                start_date:
                  type: string
                  format: date-time
                  example: "2023-01-15T00:00:00.000Z"
                ai_risk_classification:
                  anyOf:
                    - type: string
                      enum:
                        - "high risk"
                        - "limited risk"
                        - "minimal risk"
                  example: "high risk"
                type_of_high_risk_role:
                  anyOf:
                    - type: string
                      enum:
                        - "deployer"
                        - "provider"
                        - "distributor"
                        - "importer"
                        - "product manufacturer"
                        - "authorized representative"
                  example: "deployer"
                goal:
                  type: string
                  example: "To ensure compliance with AI governance standards"
                last_updated:
                  type: string
                  format: date-time
                  example: "2024-10-30T00:00:00.000Z"
                last_updated_by:
                  type: integer
                  example: 1
        required: true
      responses:
        "202":
          description: project
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: accepted
                  data:
                    $ref: "#/components/schemas/Project"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    delete:
      summary: Delete project by ID
      description: Remove a compliance project and all associated data including assessments, risks, and progress tracking
      tags: [projects]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the project to delete
      responses:
        "202":
          description: project
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: accepted
                  data:
                    type: boolean
                    example: true
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /projects/calculateProjectRisks/{id}:
    get:
      summary: Calculate project risks
      description: Analyze and calculate comprehensive risk assessment for a specific project based on AI risk classification, compliance gaps, and framework requirements
      tags: [projects]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the project
      responses:
        "200":
          description: project
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        risk_level_autocalculated:
                          type: string
                          example: "High risk"
                        count:
                          type: string
                          example: "1"
        "204":
          description: no content to display
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: no content
                data:
                  type: object
        "500":
          $ref: "#/components/responses/InternalServerError"
  /projects/calculateVendorRisks/{id}:
    get:
      summary: Calculate vendor risks for project
      description: Assess vendor-related risks for a specific project, analyzing third-party dependencies, data processing risks, and vendor compliance status
      tags: [projects]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the project
      responses:
        "200":
          description: project
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        risk_level:
                          type: string
                          example: "High risk"
                        count:
                          type: string
                          example: "1"
        "204":
          description: no content to display
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: no content
                data:
                  type: object
        "500":
          $ref: "#/components/responses/InternalServerError"

  /projectRisks:
    get:
      summary: List all project risks
      description: Retrieve all identified risks across projects including AI-specific risks, compliance gaps, and mitigation status
      tags: [projectRisks]
      security:
        - JWTAuth: []
      responses:
        "200":
          description: list of all project risks
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProjectRisk"
        "204":
          description: no content to display
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: no content
                data:
                  type: object
        "500":
          $ref: "#/components/responses/InternalServerError"
    post:
      summary: Create new project risk
      description: Document a new risk for a project with severity assessment, impact analysis, and proposed mitigation strategies
      tags: [projectRisks]
      security:
        - JWTAuth: []
      requestBody:
        description: body of the new project risk
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                project_id:
                  type: integer
                  example: 1
                risk_name:
                  type: string
                  example: "Data Privacy Compliance"
                risk_owner:
                  type: string
                  example: "Alice"
                ai_lifecycle_phase:
                  type: string
                  example: "Deployment"
                risk_description:
                  type: string
                  example: "Risk of non-compliance with data privacy regulations."
                risk_category:
                  type: string
                  example: "Regulatory"
                impact:
                  type: string
                  example: "High"
                assessment_mapping:
                  type: string
                  example: "GDPR Compliance Check"
                controls_mapping:
                  type: string
                  example: "Data Access Controls"
                likelihood:
                  type: string
                  example: "Moderate"
                severity:
                  type: string
                  example: "High"
                risk_level_autocalculated:
                  anyOf:
                    - type: string
                      enum:
                        - "No risk"
                        - "Low risk"
                        - "Medium risk"
                        - "High risk"
                        - "Very high risk"
                  example: "No risk"
                review_notes:
                  type: string
                  example: "Need for regular audits."
                mitigation_status:
                  type: string
                  example: "In Progress"
                current_risk_level:
                  type: string
                  example: "Medium"
                deadline:
                  type: string
                  format: date-time
                  example: "2024-12-31T00:00:00.000Z"
                mitigation_plan:
                  type: string
                  example: "Implement data anonymization."
                implementation_strategy:
                  type: string
                  example: "Anonymize user data in production environments."
                mitigation_evidence_document:
                  type: string
                  example: "Data_Anonymization_Plan.pdf"
                likelihood_mitigation:
                  type: string
                  example: "Reduced"
                risk_severity:
                  type: string
                  example: "Moderate"
                final_risk_level:
                  type: string
                  example: "Low"
                risk_approval:
                  type: string
                  example: "Pending"
                approval_status:
                  type: string
                  example: "Under Review"
                date_of_assessment:
                  type: string
                  format: date-time
                  example: "2024-11-01T00:00:00.000Z"
        required: true
      responses:
        "201":
          description: new created project risk
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: created
                data:
                  type: object
                  $ref: "#/components/schemas/ProjectRisk"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
  /projectRisks/{id}:
    get:
      summary: Get project risk by ID
      description: Retrieve detailed information about a specific project risk including assessment details, mitigation plans, and current status
      tags: [projectRisks]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the project risk
      responses:
        "200":
          description: project risk
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    $ref: "#/components/schemas/ProjectRisk"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    put:
      summary: Update project risk
      description: Update risk assessment, mitigation status, or other risk-related information for an existing project risk
      tags: [projectRisks]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the project risk
      requestBody:
        description: body of the new project risk
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                project_id:
                  type: integer
                  example: 1
                risk_name:
                  type: string
                  example: "Data Privacy Compliance"
                risk_owner:
                  type: string
                  example: "Alice"
                ai_lifecycle_phase:
                  type: string
                  example: "Deployment"
                risk_description:
                  type: string
                  example: "Risk of non-compliance with data privacy regulations."
                risk_category:
                  type: string
                  example: "Regulatory"
                impact:
                  type: string
                  example: "High"
                assessment_mapping:
                  type: string
                  example: "GDPR Compliance Check"
                controls_mapping:
                  type: string
                  example: "Data Access Controls"
                likelihood:
                  type: string
                  example: "Moderate"
                severity:
                  type: string
                  example: "High"
                risk_level_autocalculated:
                  anyOf:
                    - type: string
                      enum:
                        - "No risk"
                        - "Low risk"
                        - "Medium risk"
                        - "High risk"
                        - "Very high risk"
                  example: "No risk"
                review_notes:
                  type: string
                  example: "Need for regular audits."
                mitigation_status:
                  type: string
                  example: "In Progress"
                current_risk_level:
                  type: string
                  example: "Medium"
                deadline:
                  type: string
                  format: date-time
                  example: "2024-12-31T00:00:00.000Z"
                mitigation_plan:
                  type: string
                  example: "Implement data anonymization."
                implementation_strategy:
                  type: string
                  example: "Anonymize user data in production environments."
                mitigation_evidence_document:
                  type: string
                  example: "Data_Anonymization_Plan.pdf"
                likelihood_mitigation:
                  type: string
                  example: "Reduced"
                risk_severity:
                  type: string
                  example: "Moderate"
                final_risk_level:
                  type: string
                  example: "Low"
                risk_approval:
                  type: string
                  example: "Pending"
                approval_status:
                  type: string
                  example: "Under Review"
                date_of_assessment:
                  type: string
                  format: date-time
                  example: "2024-11-01T00:00:00.000Z"
        required: true
      responses:
        "202":
          description: project risk
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: accepted
                  data:
                    $ref: "#/components/schemas/ProjectRisk"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    delete:
      summary: Delete project risk
      description: Remove a project risk from the system. Use with caution as this affects risk tracking and compliance reporting
      tags: [projectRisks]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the project risk to delete
      responses:
        "202":
          description: project risk
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: accepted
                  data:
                    type: boolean
                    example: true
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /projectScopes:
    get:
      summary: List all project scopes
      description: Retrieve project scope definitions including system boundaries, data processing activities, and compliance framework coverage
      tags: [projectScopes]
      security:
        - JWTAuth: []
      responses:
        "200":
          description: list of all project scopes
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProjectScope"
        "204":
          description: no content to display
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: no content
                data:
                  type: object
        "500":
          $ref: "#/components/responses/InternalServerError"
    post:
      summary: Create project scope
      description: Define the scope and boundaries for a compliance project, specifying which systems, processes, and data are included in compliance assessment
      tags: [projectScopes]
      security:
        - JWTAuth: []
      requestBody:
        description: body of the new project scope
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                assessmentId:
                  type: integer
                  example: 1
                describeAiEnvironment:
                  type: string
                  example: "This project involves the development of a new AI-powered virtual assistant."
                isNewAiTechnology:
                  type: boolean
                  example: true
                usesPersonalData:
                  type: boolean
                  example: true
                projectScopeDocuments:
                  type: string
                  example: "project-scope-v1.pdf"
                technologyType:
                  type: string
                  example: "Natural Language Processing"
                hasOngoingMonitoring:
                  type: boolean
                  example: true
                unintendedOutcomes:
                  type: string
                  example: "Potential bias in the assistant's responses."
                technologyDocumentation:
                  type: string
                  example: "technology-documentation.docx"
        required: true
      responses:
        "201":
          description: new created project scope
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: created
                data:
                  type: object
                  $ref: "#/components/schemas/ProjectScope"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
  /projectScopes/{id}:
    get:
      summary: Get project scope by ID
      description: Retrieve detailed scope information for a specific project including system boundaries, included components, and exclusions
      tags: [projectScopes]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the project scope
      responses:
        "200":
          description: project scope
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    $ref: "#/components/schemas/ProjectScope"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    put:
      summary: Update project scope
      description: Modify project scope boundaries, included systems, or scope-related documentation
      tags: [projectScopes]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the project scope
      requestBody:
        description: body of the new project scope
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                assessmentId:
                  type: integer
                  example: 1
                describeAiEnvironment:
                  type: string
                  example: "This project involves the development of a new AI-powered virtual assistant."
                isNewAiTechnology:
                  type: boolean
                  example: true
                usesPersonalData:
                  type: boolean
                  example: true
                projectScopeDocuments:
                  type: string
                  example: "project-scope-v1.pdf"
                technologyType:
                  type: string
                  example: "Natural Language Processing"
                hasOngoingMonitoring:
                  type: boolean
                  example: true
                unintendedOutcomes:
                  type: string
                  example: "Potential bias in the assistant's responses."
                technologyDocumentation:
                  type: string
                  example: "technology-documentation.docx"
        required: true
      responses:
        "202":
          description: project scope
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: accepted
                  data:
                    $ref: "#/components/schemas/ProjectScope"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    delete:
      summary: Delete project scope
      description: Remove project scope definition. This may impact compliance assessments and project boundaries
      tags: [projectScopes]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the project scope to delete
      responses:
        "202":
          description: project scope
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: accepted
                  data:
                    type: boolean
                    example: true
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /questions:
    get:
      summary: List all compliance questions
      description: Retrieve all compliance questionnaire items used in assessments across different frameworks and control areas
      tags: [questions]
      security:
        - JWTAuth: []
      responses:
        "200":
          description: list of all questions
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Question"
        "204":
          description: no content to display
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: no content
                data:
                  type: object
        "500":
          $ref: "#/components/responses/InternalServerError"
    post:
      summary: Create new compliance question
      description: Add a new question to the compliance questionnaire library for use in assessments and evaluations
      tags: [questions]
      security:
        - JWTAuth: []
      requestBody:
        description: body of the new question
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  example: 1
                subtopicId:
                  type: number
                  example: 1
                questionText:
                  type: string
                  example: "What is the purpose of this feature?"
                answerType:
                  type: string
                  example: "Multiple Choice"
                evidenceFileRequired:
                  type: boolean
                  example: false
                hint:
                  type: string
                  example: "As a deployer, you are responsible for any additional changes made to the high-risk AI system and must fulfill additional requirements based on the data used and the specific use case you are deploying."
                isRequired:
                  type: boolean
                  example: true
                priorityLevel:
                  anyOf:
                    - type: string
                      enum:
                        - "high priority"
                        - "medium priority"
                        - "low priority"
                  example: "high priority"
                evidenceFiles:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                      filename:
                        type: string
        required: true
      responses:
        "201":
          description: new created question
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: created
                data:
                  type: object
                  $ref: "#/components/schemas/Question"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
  /questions/{id}:
    get:
      summary: Get question by ID
      description: Retrieve detailed information about a specific compliance question including its criteria and assessment guidelines
      tags: [questions]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the question
      responses:
        "200":
          description: question
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    $ref: "#/components/schemas/Question"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    put:
      summary: Update compliance question
      description: Modify question text, assessment criteria, or other attributes of an existing compliance question
      tags: [questions]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the question
      requestBody:
        description: body of the new question
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  example: 1
                subtopicId:
                  type: number
                  example: 1
                questionText:
                  type: string
                  example: "What is the purpose of this feature?"
                answerType:
                  type: string
                  example: "Multiple Choice"
                evidenceFileRequired:
                  type: boolean
                  example: false
                hint:
                  type: string
                  example: "As a deployer, you are responsible for any additional changes made to the high-risk AI system and must fulfill additional requirements based on the data used and the specific use case you are deploying."
                isRequired:
                  type: boolean
                  example: true
                priorityLevel:
                  anyOf:
                    - type: string
                      enum:
                        - "high priority"
                        - "medium priority"
                        - "low priority"
                  example: "high priority"
                evidenceFiles:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                      filename:
                        type: string
        required: true
      responses:
        "202":
          description: question
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: accepted
                  data:
                    $ref: "#/components/schemas/Question"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    delete:
      summary: Delete compliance question
      description: Remove a question from the questionnaire library. This may affect existing assessments using this question
      tags: [questions]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the question to delete
      responses:
        "202":
          description: question
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: accepted
                  data:
                    type: boolean
                    example: true
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /subcontrols:
    get:
      summary: List all compliance subcontrols
      description: Retrieve detailed subcontrol requirements from compliance frameworks including implementation guidelines and assessment criteria
      tags: [subcontrols]
      security:
        - JWTAuth: []
      responses:
        "200":
          description: list of all sub controls
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/SubControl"
        "204":
          description: no content to display
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: no content
                data:
                  type: object
        "500":
          $ref: "#/components/responses/InternalServerError"
    post:
      summary: Create new subcontrol
      description: Add a new subcontrol requirement to the compliance framework with detailed implementation and assessment guidelines
      tags: [subcontrols]
      security:
        - JWTAuth: []
      requestBody:
        description: body of the new sub control
        content:
          application/json:
            schema:
              type: object
              properties:
                controlId:
                  type: number
                  example: 1
                status:
                  anyOf:
                    - type: string
                      enum:
                        - "Waiting"
                        - "In progress"
                        - "Done"
                  example: "In Progress"
                approver:
                  type: string
                  example: "John Doe"
                riskReview:
                  anyOf:
                    - type: string
                      enum:
                        - "Acceptable risk"
                        - "Residual risk"
                        - "Unacceptable risk"
                  example: "Acceptable risk"
                owner:
                  type: string
                  example: "Bob Johnson"
                reviewer:
                  type: string
                  example: "Alice Williams"
                dueDate:
                  type: Date
                  example: "2023-12-31T00:00:00.000Z"
                implementationDetails:
                  type: string
                  example: "Implement new feature"
                evidence:
                  type: string
                  example: "evidence1.pdf"
                attachment:
                  type: string
                  example: "attachment1.docx"
                feedback:
                  type: string
                  example: "Great work so far."
        required: true
      responses:
        "201":
          description: new created sub control
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: created
                data:
                  type: object
                  $ref: "#/components/schemas/SubControl"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
  /subcontrols/{id}:
    get:
      summary: Get subcontrol by ID
      description: Retrieve detailed information about a specific subcontrol including requirements, implementation guidance, and compliance status
      tags: [subcontrols]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the sub control
      responses:
        "200":
          description: sub control
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    $ref: "#/components/schemas/SubControl"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    put:
      summary: Update subcontrol
      description: Update subcontrol requirements, implementation guidance, or compliance status for an existing subcontrol
      tags: [subcontrols]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the sub control
      requestBody:
        description: body of the new sub control
        content:
          application/json:
            schema:
              type: object
              properties:
                controlId:
                  type: number
                  example: 1
                status:
                  anyOf:
                    - type: string
                      enum:
                        - "Waiting"
                        - "In progress"
                        - "Done"
                  example: "In Progress"
                approver:
                  type: string
                  example: "John Doe"
                riskReview:
                  anyOf:
                    - type: string
                      enum:
                        - "Acceptable risk"
                        - "Residual risk"
                        - "Unacceptable risk"
                  example: "Acceptable risk"
                owner:
                  type: string
                  example: "Bob Johnson"
                reviewer:
                  type: string
                  example: "Alice Williams"
                dueDate:
                  type: Date
                  example: "2023-12-31T00:00:00.000Z"
                implementationDetails:
                  type: string
                  example: "Implement new feature"
                evidence:
                  type: string
                  example: "evidence1.pdf"
                attachment:
                  type: string
                  example: "attachment1.docx"
                feedback:
                  type: string
                  example: "Great work so far."
        required: true
      responses:
        "202":
          description: sub control
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: accepted
                  data:
                    $ref: "#/components/schemas/SubControl"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    delete:
      summary: Delete subcontrol
      description: Remove a subcontrol from the framework. This may affect related assessments and compliance tracking
      tags: [subcontrols]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the sub control to delete
      responses:
        "202":
          description: sub control
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: accepted
                  data:
                    type: boolean
                    example: true
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /subtopics:
    get:
      summary: List compliance subtopics
      description: Retrieve all compliance subtopics that organize and categorize framework requirements for better navigation
      tags: [subtopics]
      security:
        - JWTAuth: []
      responses:
        "200":
          description: list of all sub topics
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/SubTopic"
        "204":
          description: no content to display
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: no content
                data:
                  type: object
        "500":
          $ref: "#/components/responses/InternalServerError"
    post:
      tags: [subtopics]
      security:
        - JWTAuth: []
      requestBody:
        description: body of the new sub topic
        content:
          application/json:
            schema:
              type: object
              properties:
                topicId:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: "Subtopic A"
        required: true
      responses:
        "201":
          description: new created sub topic
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: created
                data:
                  type: object
                  $ref: "#/components/schemas/SubTopic"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
  /subtopics/{id}:
    get:
      summary: Get subtopic by ID
      description: Retrieve detailed information about a specific compliance subtopic and its associated controls
      tags: [subtopics]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the sub topic
      responses:
        "200":
          description: sub topic
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    $ref: "#/components/schemas/SubTopic"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    put:
      tags: [subtopics]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the sub topic
      requestBody:
        description: body of the new sub topic
        content:
          application/json:
            schema:
              type: object
              properties:
                topicId:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: "Subtopic A"
        required: true
      responses:
        "202":
          description: sub topic
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: accepted
                  data:
                    $ref: "#/components/schemas/SubTopic"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    delete:
      tags: [subtopics]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the sub topic to delete
      responses:
        "202":
          description: sub topic
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: accepted
                  data:
                    type: boolean
                    example: true
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /topics:
    get:
      summary: List compliance topics
      description: Retrieve all high-level compliance topics that provide organizational structure for framework requirements
      tags: [topics]
      security:
        - JWTAuth: []
      responses:
        "200":
          description: list of all topics
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Topic"
        "204":
          description: no content to display
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: no content
                data:
                  type: object
        "500":
          $ref: "#/components/responses/InternalServerError"
    post:
      tags: [topics]
      security:
        - JWTAuth: []
      requestBody:
        description: body of the new topic
        content:
          application/json:
            schema:
              type: object
              properties:
                assessmentId:
                  type: integer
                  example: 1
                title:
                  type: string
                  example: "Project A"
        required: true
      responses:
        "201":
          description: new created topic
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: created
                data:
                  type: object
                  $ref: "#/components/schemas/Topic"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
  /topics/{id}:
    get:
      summary: Get topic by ID
      description: Retrieve detailed information about a specific compliance topic including associated subtopics and controls
      tags: [topics]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the topic
      responses:
        "200":
          description: topic
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    $ref: "#/components/schemas/Topic"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    put:
      tags: [topics]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the topic
      requestBody:
        description: body of the new topic
        content:
          application/json:
            schema:
              type: object
              properties:
                assessmentId:
                  type: integer
                  example: 1
                title:
                  type: string
                  example: "Project A"
        required: true
      responses:
        "202":
          description: topic
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: accepted
                  data:
                    $ref: "#/components/schemas/Topic"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    delete:
      tags: [topics]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the topic to delete
      responses:
        "202":
          description: topic
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: accepted
                  data:
                    type: boolean
                    example: true
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /vendors:
    get:
      summary: List all vendors
      description: Retrieve all third-party vendors and service providers with their risk assessments, compliance status, and contractual information
      tags: [vendors]
      security:
        - JWTAuth: []
      responses:
        "200":
          description: list of all vendors
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Vendor"
        "204":
          description: no content to display
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: no content
                data:
                  type: object
        "500":
          $ref: "#/components/responses/InternalServerError"
    post:
      summary: Add new vendor
      description: Register a new third-party vendor or service provider with initial risk assessment and compliance requirements
      tags: [vendors]
      security:
        - JWTAuth: []
      requestBody:
        description: body of the new vendor
        content:
          application/json:
            schema:
              type: object
              properties:
                projectId:
                  type: integer
                  example: 1
                vendorName:
                  type: string
                  example: "Vendor A"
                assignee:
                  type: string
                  example: "John Doe"
                vendorProvides:
                  type: string
                  example: "Consulting Services"
                website:
                  type: string
                  example: "www.vendora.com"
                vendorContactPerson:
                  type: string
                  example: "Jane Smith"
                reviewResult:
                  type: string
                  example: "Positive"
                reviewStatus:
                  type: string
                  example: "Completed"
                reviewer:
                  type: string
                  example: "Bob Johnson"
                reviewDate:
                  type: string
                  format: date-time
                  example: "2023-05-15T00:00:00.000Z"
                riskDescription:
                  type: string
                  example: "Limited experience with new technology"
                impactDescription:
                  type: string
                  example: "Potential delays in project timeline"
                impact:
                  type: integer
                  example: 3
                probability:
                  type: number
                  example: 0.4
                actionOwner:
                  type: string
                  example: "Alice Williams"
                actionPlan:
                  type: string
                  example: "Provide additional training"
                riskSeverity:
                  type: integer
                  example: 2
                riskLevel:
                  anyOf:
                    - type: string
                      enum:
                        - "Very high risk"
                        - "High risk"
                        - "Medium risk"
                        - "Low risk"
                        - "Very low risk"
                  example: "Low risk"
                likelihood:
                  type: number
                  example: 0.5
        required: true
      responses:
        "201":
          description: new created vendor
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: created
                data:
                  type: object
                  $ref: "#/components/schemas/Vendor"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
  /vendors/{id}:
    get:
      summary: Get vendor by ID
      description: Retrieve detailed information about a specific vendor including risk assessment, compliance status, and contract details
      tags: [vendors]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the vendor
      responses:
        "200":
          description: vendor
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    $ref: "#/components/schemas/Vendor"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    put:
      summary: Update vendor information
      description: Update vendor details, risk assessment, compliance status, or contractual information for an existing vendor
      tags: [vendors]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the vendor
      requestBody:
        description: body of the new vendor
        content:
          application/json:
            schema:
              type: object
              properties:
                projectId:
                  type: integer
                  example: 1
                vendorName:
                  type: string
                  example: "Vendor A"
                assignee:
                  type: string
                  example: "John Doe"
                vendorProvides:
                  type: string
                  example: "Consulting Services"
                website:
                  type: string
                  example: "www.vendora.com"
                vendorContactPerson:
                  type: string
                  example: "Jane Smith"
                reviewResult:
                  type: string
                  example: "Positive"
                reviewStatus:
                  type: string
                  example: "Completed"
                reviewer:
                  type: string
                  example: "Bob Johnson"
                riskStatus:
                  anyOf:
                    - type: string
                      enum:
                        - "Active"
                        - "Under review"
                        - "Not active"
                  example: "Not active"
                reviewDate:
                  type: string
                  format: date-time
                  example: "2023-05-15T00:00:00.000Z"
                riskDescription:
                  type: string
                  example: "Limited experience with new technology"
                impactDescription:
                  type: string
                  example: "Potential delays in project timeline"
                impact:
                  type: integer
                  example: 3
                probability:
                  type: number
                  example: 0.4
                actionOwner:
                  type: string
                  example: "Alice Williams"
                actionPlan:
                  type: string
                  example: "Provide additional training"
                riskSeverity:
                  type: integer
                  example: 2
                riskLevel:
                  anyOf:
                    - type: string
                      enum:
                        - "Very high risk"
                        - "High risk"
                        - "Medium risk"
                        - "Low risk"
                        - "Very low risk"
                  example: "Low risk"
                likelihood:
                  type: number
                  example: 0.5
        required: true
      responses:
        "202":
          description: vendor
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: accepted
                  data:
                    $ref: "#/components/schemas/Vendor"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    delete:
      summary: Remove vendor
      description: Remove a vendor from the system. This may affect related project risk assessments and vendor dependency tracking
      tags: [vendors]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the vendor to delete
      responses:
        "202":
          description: vendor
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: accepted
                  data:
                    type: boolean
                    example: true
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /vendorRisks:
    get:
      summary: List all vendor risks
      description: Retrieve all identified vendor-related risks including data processing risks, compliance gaps, and third-party dependencies
      tags: [vendorRisks]
      security:
        - JWTAuth: []
      responses:
        "200":
          description: list of all vendor risks
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/VendorRisk"
        "204":
          description: no content to display
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: no content
                data:
                  type: object
        "500":
          $ref: "#/components/responses/InternalServerError"
    post:
      summary: Create vendor risk assessment
      description: Document a new risk associated with a specific vendor including impact analysis, likelihood, and mitigation strategies
      tags: [vendorRisks]
      security:
        - JWTAuth: []
      requestBody:
        description: body of the new vendor risk
        content:
          application/json:
            schema:
              type: object
              properties:
                project_id:
                  type: integer
                  example: 1
                vendor_name:
                  type: string
                  example: "Tech Solutions Inc."
                risk_name:
                  type: string
                  example: "Data Security"
                owner:
                  type: string
                  example: "Alice"
                risk_level:
                  anyOf:
                    - type: string
                      enum:
                        - "No risk"
                        - "Low risk"
                        - "Medium risk"
                        - "High risk"
                        - "Very high risk"
                  example: "High Risk"
                review_date:
                  type: string
                  format: date-time
                  example: "2024-10-20T00:00:00.000Z"
        required: true
      responses:
        "201":
          description: new created vendor risk
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: created
                data:
                  type: object
                  $ref: "#/components/schemas/VendorRisk"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
  /vendorRisks/{id}:
    get:
      summary: Get vendor risk by ID
      description: Retrieve detailed information about a specific vendor risk including assessment details, mitigation plans, and current status
      tags: [vendorRisks]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the vendor risk
      responses:
        "200":
          description: vendor risk
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    $ref: "#/components/schemas/VendorRisk"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    put:
      summary: Update vendor risk
      description: Update vendor risk assessment, mitigation status, or risk-related information for an existing vendor risk
      tags: [vendorRisks]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the vendor risk
      requestBody:
        description: body of the new vendor risk
        content:
          application/json:
            schema:
              type: object
              properties:
                project_id:
                  type: integer
                  example: 1
                vendor_name:
                  type: string
                  example: "Tech Solutions Inc."
                risk_name:
                  type: string
                  example: "Data Security"
                owner:
                  type: string
                  example: "Alice"
                risk_level:
                  anyOf:
                    - type: string
                      enum:
                        - "No risk"
                        - "Low risk"
                        - "Medium risk"
                        - "High risk"
                        - "Very high risk"
                  example: "High Risk"
                review_date:
                  type: string
                  format: date-time
                  example: "2024-10-20T00:00:00.000Z"
        required: true
      responses:
        "202":
          description: vendor risk
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: accepted
                  data:
                    $ref: "#/components/schemas/VendorRisk"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    delete:
      summary: Remove vendor risk
      description: Delete a vendor risk from the system. This affects vendor risk tracking and compliance reporting
      tags: [vendorRisks]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the vendor risk to delete
      responses:
        "202":
          description: vendor risk
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: accepted
                  data:
                    type: boolean
                    example: true
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /users:
    get:
      summary: List all users
      description: Retrieve all users in the organization including their roles, permissions, and account status for user management
      tags: [users]
      security:
        - JWTAuth: []
      responses:
        "200":
          description: list of all users
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
        "204":
          description: no content to display
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: no content
                data:
                  type: object
        "500":
          $ref: "#/components/responses/InternalServerError"
  /users/{id}:
    get:
      summary: Get user by ID
      description: Retrieve detailed information about a specific user including profile data, role assignments, and account settings
      tags: [users]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the user
      responses:
        "200":
          description: user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    $ref: "#/components/schemas/User"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    put:
      summary: Update user by ID
      description: Update user profile information, role assignments, or account settings for an existing user
      tags: [users]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the user
      requestBody:
        description: body of the new user
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "John Doe"
                email:
                  type: string
                  example: "user@example.com"
                password_hash:
                  type: string
                  example: "$2b$10$c7Mtd3kRpMjr6VexlxuAleT8Sy3SwPcT.YLCazH5QWBgnATDo5N6O"
                role:
                  type: integer
                  example: 1
                created_at:
                  type: string
                  format: date-time
                  example: "2024-01-01T00:00:00.000Z"
                last_login:
                  type: string
                  format: date-time
                  example: "2024-10-01T00:00:00.000Z"
        required: true
      responses:
        "202":
          description: user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: accepted
                  data:
                    $ref: "#/components/schemas/User"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    delete:
      summary: Delete user by ID
      description: Remove a user account from the system. This action cannot be undone and will affect user access to all projects
      tags: [users]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the user to delete
      responses:
        "202":
          description: user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: accepted
                  data:
                    type: boolean
                    example: true
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /users/register:
    post:
      summary: Register new user account
      description: Create a new user account with email, password, and role assignment for accessing the compliance management system
      tags: [users]
      requestBody:
        description: body of the new user
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Alice"
                surname:
                  type: string
                  example: "Smith"
                email:
                  type: string
                  example: "user@example.com"
                password:
                  type: string
                  example: "SecurePassword123!"
                role:
                  type: integer
                  example: 1
                created_at:
                  type: string
                  format: date-time
                  example: "2024-01-01T00:00:00.000Z"
                last_login:
                  type: string
                  format: date-time
                  example: "2024-10-01T00:00:00.000Z"
        required: true
      responses:
        "201":
          description: new created user
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: created
                data:
                  type: object
                  $ref: "#/components/schemas/User"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
  /users/by-email/{email}:
    get:
      summary: Find user by email address
      description: Retrieve user information using their email address, useful for user lookup and verification processes
      tags: [users]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: email
          schema:
            type: string
          required: true
          description: email of the user
      responses:
        "200":
          description: user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    $ref: "#/components/schemas/User"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /users/login:
    post:
      summary: Authenticate user and receive JWT tokens
      description: |
        Authenticates a user with email and password credentials. Returns both access and refresh tokens.
        
        **Access Token**: Short-lived token (15 minutes) for API authentication
        **Refresh Token**: Long-lived token (7 days) for obtaining new access tokens
        
        Use the access token in the Authorization header for subsequent API calls:
        `Authorization: Bearer {accessToken}`
      tags: [users]
      requestBody:
        description: User login credentials
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  description: Registered user email address
                  example: "user@example.com"
                password:
                  type: string
                  format: password
                  description: User password (minimum 8 characters)
                  example: "SecurePassword123!"
        required: true
      responses:
        "200":
          description: Successful authentication with tokens
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "ok"
                  data:
                    type: object
                    properties:
                      user:
                        $ref: "#/components/schemas/User"
                      accessToken:
                        type: string
                        description: JWT access token for API authentication
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwiZW1haWwiOiJ1c2VyQGV4YW1wbGUuY29tIiwiaWF0IjoxNzMxMDc1NDU1LCJleHAiOjE3MzEwNzYzNTV9.hp7H0bZC-ALaPEcIoAkhRtFpKjwndb6QL5ZH-9phjlw"
                      refreshToken:
                        type: string
                        description: JWT refresh token for obtaining new access tokens
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwiZW1haWwiOiJ1c2VyQGV4YW1wbGUuY29tIiwiaWF0IjoxNzMxMDc1NDU1LCJleHAiOjE3MzE2ODAyNTV9.kL9mZ3nX8vY2jR4hK5pW7tM6qN8sA3dE1fG0hI9jB2w"
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Bad Request"
                  data:
                    type: string
                    example: "Email and password are required"
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized"
                  data:
                    type: string
                    example: "Invalid email or password"
        "403":
          description: Account locked or disabled
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Forbidden"
                  data:
                    type: string
                    example: "Account has been disabled"
        "429":
          description: Too many login attempts
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Too Many Requests"
                  data:
                    type: string
                    example: "Too many login attempts. Please try again later"
        "500":
          description: Server error during authentication
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal Server Error"
                  error:
                    type: object
                    description: Error details for debugging
  /users/reset-password:
    post:
      summary: Reset user password
      description: Reset a user's password by providing email and new password. Typically used for password recovery workflows
      tags: [users]
      requestBody:
        description: email and password for the user
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "user@example.com"
                newPassword:
                  type: string
                  example: "NewSecurePassword123!"
        required: true
      responses:
        "202":
          description: user object after updating password
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: created
                data:
                  type: object
                  $ref: "#/components/schemas/User"
        "406":
          description: not acceptable error
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: "Not Acceptable"
                error:
                  type: object
        "404":
          description: not found error
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: "Not Found"
                error:
                  type: object
        "500":
          $ref: "#/components/responses/InternalServerError"
  /users/{id}/calculate-progress:
    get:
      summary: Calculate user compliance progress
      description: Analyze and calculate the compliance progress for projects assigned to a specific user, showing completion rates and pending tasks
      tags: [users]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the user
      responses:
        "200":
          description: user
          content:
            application/json:
              type: object
              properties:
                controls:
                  type: object
                  properties:
                    projects:
                      type: array
                      items:
                        type: object
                        properties:
                          projectId:
                            type: integer
                            example: 1
                          totalSubControls:
                            type: integer
                            example: 12
                          doneSubControls:
                            type: integer
                            example: 1
                    totalSubControls:
                      type: integer
                      example: 12
                    doneSubControls:
                      type: integer
                      example: 1
                    percentageComplete:
                      type: number
                      format: float
                      example: 8.33
                assessments:
                  type: object
                  properties:
                    projects:
                      type: array
                      items:
                        type: object
                        properties:
                          projectId:
                            type: integer
                            example: 1
                          totalAssessments:
                            type: integer
                            example: 34
                          doneAssessments:
                            type: integer
                            example: 0
                    totalAssessments:
                      type: integer
                      example: 34
                    doneAssessments:
                      type: integer
                      example: 0
                    percentageComplete:
                      type: number
                      format: float
                      example: 0
        "500":
          $ref: "#/components/responses/InternalServerError"

  /roles:
    get:
      summary: List all user roles
      description: Retrieve all available user roles and their associated permissions for access control and user management
      tags: [roles]
      security:
        - JWTAuth: []
      responses:
        "200":
          description: list of all roles
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Role"
        "204":
          description: no content to display
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: no content
                data:
                  type: object
        "500":
          $ref: "#/components/responses/InternalServerError"
    post:
      summary: Create new user role
      description: Define a new user role with specific permissions and access levels for system administration
      tags: [roles]
      security:
        - JWTAuth: []
      requestBody:
        description: body of the new role
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Admin"
                description:
                  type: string
                  example: "Administrator with full access to the system."
        required: true
      responses:
        "201":
          description: new created role tracker
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: created
                data:
                  type: object
                  $ref: "#/components/schemas/Role"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
  /roles/{id}:
    get:
      summary: Get role by ID
      description: Retrieve detailed information about a specific user role including permissions and access restrictions
      tags: [roles]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the role
      responses:
        "200":
          description: role
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    $ref: "#/components/schemas/Role"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    put:
      summary: Update user role
      description: Modify role permissions, access levels, or other role-specific settings for an existing user role
      tags: [roles]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the role
      requestBody:
        description: body of the new role
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Admin"
                description:
                  type: string
                  example: "Administrator with full access to the system."
        required: true
      responses:
        "202":
          description: role
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: accepted
                  data:
                    $ref: "#/components/schemas/Role"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    delete:
      summary: Delete user role
      description: Remove a user role from the system. This may affect users currently assigned to this role
      tags: [roles]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the role to delete
      responses:
        "202":
          description: role
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: accepted
                  data:
                    type: boolean
                    example: true
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  
  /training:
    get:
      summary: Returns all the training modules
      tags: [training]
      security:
       - JWTAuth: []
      responses:
        "200":
          description: list all the training modules
          content:
            application/json:
              schema:
               type: object
               properties:
                 message:
                   type: string
                   example: ok
                 data:
                  type: object
                  items:
                    $ref: "#/components/schemas/TrainingModule"
        "204":
          description: no content to display
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: no content
                data:
                  type: object
                  items:
                    $ref: "#/components/schemas/TrainingModule"
        "500":
          description: internal server error
          content:
            appliction/json:
              type: object
              properties:
                message:
                  type: string
                  example: internal server error
                error:
                  type: object
    
    post:
      summary: Create new training module
      description: Add a new training module to the system with content, objectives, and completion tracking
      tags: [training]
      security:
       - JWTAuth: []
      responses:
        "201":
          description: create new training registar
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Training successfully created
                data:
                type: object
                items:
                  $ref: 

        
        "500":
          description: Error creating new training (internal server error)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: internal server error

                  error:
                    type: object

  /training/training-id/{id}:
    get:
      summary: Get training module by ID
      description: Retrieve detailed information about a specific training module including content, progress tracking, and completion status
      tags: [training]
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the role
      responses:
        "200":
           decription: get one training data depending on the id
           content:
             application/json:
               schema:
                 type: object
                 properties:
                   message:
                     type: string
                     example: ok
                       
                 data:
                   $ref: "#/components/schemas/TrainingModule"
        
        "404":
           description: no content to display
           content:
              application/json:
                type: object
                properties:
                  message:
                    type: string
                    example: not found
                  data:
                    type: object
        "500":
            description: internal server error
            content:
              application/json:
                type: object
                properties:
                  message:
                    type: string
                    example: internal server error
                  error:
                    type: object

  /training/{id}:
    patch:
      summary: Update training module
      description: Update training module content, status, or tracking information for an existing training module
      tags: [training]
      security:
       - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: update the training data of one particular instance
      requestBody:
        description: body of the training module
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TrainingModule"            
      response:
        "202":
          description: training data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                   type: object
                   example: accepted
                  data:
                    $ref: "#/components/schemas/TrainingModule"
        "400":
          description: Need to add all the fields
          content:
            application/json:
              schema:
                type: string
                message:
                  type: string
                  example: "All fields are required to get updated"
        "404":
          description: no content to display
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: not found
                  data:
                    type: object
        
        "500":
          $ref: "#/components/responses/InternalServerError"
    delete:
      tags: [training]
      security:
       - JWTAuth: []
      parameters:
       - in: path
         name: id
         schema:
           type: integer
         required: true
         description: id of the training to delete
      responses:
       "202":
         description: training data
         content:
           application/json:
             schema:
               type: object
               properties:
                 message:
                   type: string
                   example: accepted
                 data:
                   type: boolean
                   example: true
       "404":
          description: no content to display
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: not found
                data:
                  type: object
       "500":
          description: internal server error
          content:
            application/json:
              type: object
              properties:
                message:
                  type: string
                  example: internal server error
                error:
                  type: object


                

components:
  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        JWT token obtained from the /users/login endpoint.
        
        **Format**: `Authorization: Bearer {your_jwt_token}`
        
        **Token Lifetime**: Access tokens expire after 15 minutes. Use refresh tokens to obtain new access tokens.
        
        **Example**: `Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...`
      
  responses:
    BadRequest:
      description: Invalid request parameters or malformed request body
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Bad Request"
              data:
                type: string
                example: "Invalid input parameters"
    
    Unauthorized:
      description: Missing or invalid authentication token
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Unauthorized"
              data:
                type: string
                example: "Token not found or invalid"
    
    Forbidden:
      description: Insufficient permissions or account restrictions
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Forbidden"
              data:
                type: string
                example: "Insufficient permissions to access this resource"
    
    NotFound:
      description: Requested resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Not Found"
              data:
                type: string
                example: "The requested resource does not exist"
    
    Conflict:
      description: Resource already exists or conflicting state
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Conflict"
              data:
                type: string
                example: "Resource already exists"
    
    TooManyRequests:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Too Many Requests"
              data:
                type: string
                example: "Rate limit of 100 requests per minute exceeded"
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Maximum requests allowed per time window
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: Number of requests remaining
            X-RateLimit-Reset:
              schema:
                type: integer
              description: Time when rate limit resets (Unix timestamp)
    
    InternalServerError:
      description: Unexpected server error
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Internal Server Error"
              error:
                type: object
                description: Error details (only in development mode)
    
    ServiceUnavailable:
      description: Service temporarily unavailable
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Service Unavailable"
              data:
                type: string
                example: "Service is temporarily down for maintenance"
                
  schemas:
    Assessment:
      type: object
      properties:
        id:
          type: integer
          example: 1
        projectId:
          type: integer
          example: 1
    Role:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Admin"
        description:
          type: string
          example: "Administrator with full access to the system."
    Control:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "Regulatory Training and Response Procedures"
        description:
          type: string
          example: "Train personnel on regulatory requirements and procedures for responding to authority requests."
        orderNo:
          type: integer
          example: 1
        status:
          type: string
          example: "In Progress"
        approver:
          type: string
          example: "John Doe"
        riskReview:
          type: string
          example: "Acceptable risk"
        owner:
          type: string
          example: "Bob Johnson"
        reviewer:
          type: string
          example: "Alice Williams"
        dueDate:
          type: string
          format: date-time
          example: "2024-09-20T00:00:00.000Z"
        implementationDetails:
          type: string
          example: "Implement new feature"
        controlCategoryId:
          type: string
          example: 1
    Project:
      type: object
      properties:
        id:
          type: number
          example: 1
        project_title:
          type: string
          example: "AI Compliance Checker"
        owner:
          type: integer
          example: 1
        members:
          type: array
          items:
            type: string
            example: "1"
          example:
        start_date:
          type: string
          format: date-time
          example: "2023-01-15T00:00:00.000Z"
        ai_risk_classification:
          anyOf:
            - type: string
              enum:
                - "high risk"
                - "limited risk"
                - "minimal risk"
          example: "high risk"
        type_of_high_risk_role:
          anyOf:
            - type: string
              enum:
                - "deployer"
                - "provider"
                - "distributor"
                - "importer"
                - "product manufacturer"
                - "authorized representative"
          example: "deployer"
        goal:
          type: string
          example: "To ensure compliance with AI governance standards"
        last_updated:
          type: string
          format: date-time
          example: "2024-10-30T00:00:00.000Z"
        last_updated_by:
          type: integer
          example: 1
        # assessment_id:
        #   type: integer
        #   example: 1
    ProjectRisk:
      type: object
      properties:
        id:
          type: integer
          example: 1
        project_id:
          type: integer
          example: 1
        risk_name:
          type: string
          example: "Data Privacy Compliance"
        risk_owner:
          type: string
          example: "Alice"
        ai_lifecycle_phase:
          type: string
          example: "Deployment"
        risk_description:
          type: string
          example: "Risk of non-compliance with data privacy regulations."
        risk_category:
          type: string
          example: "Regulatory"
        impact:
          type: string
          example: "High"
        assessment_mapping:
          type: string
          example: "GDPR Compliance Check"
        controls_mapping:
          type: string
          example: "Data Access Controls"
        likelihood:
          type: string
          example: "Moderate"
        severity:
          type: string
          example: "High"
        risk_level_autocalculated:
          anyOf:
            - type: string
              enum:
                - "No risk"
                - "Low risk"
                - "Medium risk"
                - "High risk"
                - "Very high risk"
          example: "No risk"
        review_notes:
          type: string
          example: "Need for regular audits."
        mitigation_status:
          type: string
          example: "In Progress"
        current_risk_level:
          type: string
          example: "Medium"
        deadline:
          type: string
          format: date-time
          example: "2024-12-31T00:00:00.000Z"
        mitigation_plan:
          type: string
          example: "Implement data anonymization."
        implementation_strategy:
          type: string
          example: "Anonymize user data in production environments."
        mitigation_evidence_document:
          type: string
          example: "Data_Anonymization_Plan.pdf"
        likelihood_mitigation:
          type: string
          example: "Reduced"
        risk_severity:
          type: string
          example: "Moderate"
        final_risk_level:
          type: string
          example: "Low"
        risk_approval:
          type: string
          example: "Pending"
        approval_status:
          type: string
          example: "Under Review"
        date_of_assessment:
          type: string
          format: date-time
          example: "2024-11-01T00:00:00.000Z"
    ProjectScope:
      type: object
      properties:
        id:
          type: integer
          example: 1
        assessmentId:
          type: integer
          example: 1
        describeAiEnvironment:
          type: string
          example: "This project involves the development of a new AI-powered virtual assistant."
        isNewAiTechnology:
          type: boolean
          example: true
        usesPersonalData:
          type: boolean
          example: true
        projectScopeDocuments:
          type: string
          example: "project-scope-v1.pdf"
        technologyType:
          type: string
          example: "Natural Language Processing"
        hasOngoingMonitoring:
          type: boolean
          example: true
        unintendedOutcomes:
          type: string
          example: "Potential bias in the assistant's responses."
        technologyDocumentation:
          type: string
          example: "technology-documentation.docx"
    Question:
      type: object
      properties:
        id:
          type: number
          example: 1
        subtopicId:
          type: number
          example: 1
        questionText:
          type: string
          example: "What is the purpose of this feature?"
        answerType:
          type: string
          example: "Multiple Choice"
        evidenceFileRequired:
          type: boolean
          example: false
        hint:
          type: string
          example: "As a deployer, you are responsible for any additional changes made to the high-risk AI system and must fulfill additional requirements based on the data used and the specific use case you are deploying."
        isRequired:
          type: boolean
          example: true
        priorityLevel:
          anyOf:
            - type: string
              enum:
                - "high priority"
                - "medium priority"
                - "low priority"
          example: "high priority"
        evidenceFiles:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
              filename:
                type: string
    SubControl:
      type: object
      properties:
        id:
          type: number
          example: 1
        controlId:
          type: number
          example: 1
        title:
          type: string
          example: ""
        description:
          type: string
          example: ""
        orderNo:
          type: integer
          example: 1
        status:
          anyOf:
            - type: string
              enum:
                - "Waiting"
                - "In progress"
                - "Done"
          example: "In Progress"
        approver:
          type: string
          example: "John Doe"
        riskReview:
          anyOf:
            - type: string
              enum:
                - "Acceptable risk"
                - "Residual risk"
                - "Unacceptable risk"
          example: "Acceptable risk"
        owner:
          type: string
          example: "Bob Johnson"
        reviewer:
          type: string
          example: "Alice Williams"
        dueDate:
          type: Date
          example: "2023-12-31T00:00:00.000Z"
        implementationDetails:
          type: string
          example: "Implement new feature"
        evidenceDescription:
          type: string
          example: "evidence1.pdf"
        # attachment:
        #   type: string
        #   example: "attachment1.docx"
        feedbackDescription:
          type: string
          example: "Great work so far."
    SubTopic:
      type: object
      properties:
        id:
          type: integer
          example: 1
        topicId:
          type: integer
          example: 1
        name:
          type: string
          example: "Subtopic A"
    Topic:
      type: object
      properties:
        id:
          type: integer
          example: 1
        assessmentId:
          type: integer
          example: 1
        title:
          type: string
          example: "Project A"
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Alice"
        surname:
          type: string
          example: "Smith"
        email:
          type: string
          example: "user@example.com"
        password_hash:
          type: string
          example: "$2b$10$c7Mtd3kRpMjr6VexlxuAleT8Sy3SwPcT.YLCazH5QWBgnATDo5N6O"
        role:
          type: integer
          example: 1
        created_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00.000Z"
        last_login:
          type: string
          format: date-time
          example: "2024-10-01T00:00:00.000Z"
    Vendor:
      type: object
      properties:
        id:
          type: integer
          example: 1
        projectId:
          type: integer
          example: 1
        vendorName:
          type: string
          example: "Vendor A"
        assignee:
          type: string
          example: "John Doe"
        vendorProvides:
          type: string
          example: "Consulting Services"
        website:
          type: string
          example: "www.vendora.com"
        vendorContactPerson:
          type: string
          example: "Jane Smith"
        reviewResult:
          type: string
          example: "Positive"
        reviewStatus:
          type: string
          example: "Completed"
        reviewer:
          type: string
          example: "Bob Johnson"
        riskStatus:
          anyOf:
            - type: string
              enum:
                - "Active"
                - "Under review"
                - "Not active"
          example: "Not active"
        reviewDate:
          type: string
          format: date-time
          example: "2023-05-15T00:00:00.000Z"
        riskDescription:
          type: string
          example: "Limited experience with new technology"
        impactDescription:
          type: string
          example: "Potential delays in project timeline"
        impact:
          type: integer
          example: 3
        probability:
          type: number
          example: 0.4
        actionOwner:
          type: string
          example: "Alice Williams"
        actionPlan:
          type: string
          example: "Provide additional training"
        riskSeverity:
          type: integer
          example: 2
        riskLevel:
          anyOf:
            - type: string
              enum:
                - "Very high risk"
                - "High risk"
                - "Medium risk"
                - "Low risk"
                - "Very low risk"
          example: "Low risk"
        likelihood:
          type: number
          example: 0.5
    VendorRisk:
      type: object
      properties:
        id:
          type: integer
          example: 1
        project_id:
          type: integer
          example: 1
        vendor_name:
          type: string
          example: "Tech Solutions Inc."
        risk_name:
          type: string
          example: "Data Security"
        owner:
          type: string
          example: "Alice"
        risk_level:
          anyOf:
            - type: string
              enum:
                - "No risk"
                - "Low risk"
                - "Medium risk"
                - "High risk"
                - "Very high risk"
          example: "High Risk"
        review_date:
          type: string
          format: date-time
          example: "2024-10-20T00:00:00.000Z"
    AssessmentTracker:
      allOf:
        - $ref: "#/components/schemas/Assessment"
      type: object # Define the type explicitly
      properties:
        topics:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Topic"
            type: object # Explicitly define the type
            properties:
              subtopics:
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/SubTopic"
                  type: object # Explicitly define the type
                  properties:
                    questions:
                      type: array
                      items:
                        $ref: "#/components/schemas/Question"
    ControlCategories:
      type: object
      properties:
        id:
          type: integer
          exampele: 1
        projectId:
          type: integer
          example: 1
        name:
          type: string
          example: "AI literacy"
        orderNo:
          type: integer
          example: 1

    TrainingModule:
      properties:
        id:
         type: integer
         example: 1
        training_name:
          type: string
          example: "AI Training"
        duration:
           type: string
           example: "6 weeks"
        provider:
           type: string
           example: "Verifywise open source AI governance"
        department:
          type: string
          example: "Maths Department"
        status:
          type: string
          enum: [Planned,In Progress, Completed]
        people:
          type: integer
          example: 10
        description:
           type: string
           example: "A training module requiring 6 weeks"