{"version":3,"sources":["../src/index.ts","../src/helpers.ts"],"sourcesContent":["import { isObject, isRegex } from './helpers';\n\n/**\n * Check if arrays are equal.\n */\nfunction equalArray(left: unknown[], right: unknown[]) {\n  const { length } = left;\n\n  if (length !== right.length) {\n    return false;\n  }\n\n  for (let index = length; index-- !== 0; ) {\n    if (!equal(left[index], right[index])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Check if array buffers are equal.\n */\nfunction equalArrayBuffer(left: ArrayBufferView, right: ArrayBufferView) {\n  if (left.byteLength !== right.byteLength) {\n    return false;\n  }\n\n  const view1 = new DataView(left.buffer);\n  const view2 = new DataView(right.buffer);\n\n  let index = left.byteLength;\n\n  while (index--) {\n    if (view1.getUint8(index) !== view2.getUint8(index)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Check if maps are equal.\n */\nfunction equalMap(left: Map<unknown, unknown>, right: Map<unknown, unknown>) {\n  if (left.size !== right.size) {\n    return false;\n  }\n\n  for (const index of left.entries()) {\n    if (!right.has(index[0])) {\n      return false;\n    }\n  }\n\n  for (const index of left.entries()) {\n    if (!equal(index[1], right.get(index[0]))) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Check if sets are equal.\n */\nfunction equalSet(left: Set<unknown>, right: Set<unknown>) {\n  if (left.size !== right.size) {\n    return false;\n  }\n\n  for (const index of left.entries()) {\n    if (!right.has(index[0])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Checks if two values are equal.\n */\nexport default function equal(left: unknown, right: unknown) {\n  if (left === right) {\n    return true;\n  }\n\n  if (left && isObject(left) && right && isObject(right)) {\n    if (left.constructor !== right.constructor) {\n      return false;\n    }\n\n    if (Array.isArray(left) && Array.isArray(right)) {\n      return equalArray(left, right);\n    }\n\n    if (left instanceof Map && right instanceof Map) {\n      return equalMap(left, right);\n    }\n\n    if (left instanceof Set && right instanceof Set) {\n      return equalSet(left, right);\n    }\n\n    if (ArrayBuffer.isView(left) && ArrayBuffer.isView(right)) {\n      return equalArrayBuffer(left, right);\n    }\n\n    if (isRegex(left) && isRegex(right)) {\n      return left.source === right.source && left.flags === right.flags;\n    }\n\n    if (left.valueOf !== Object.prototype.valueOf) {\n      return left.valueOf() === right.valueOf();\n    }\n\n    if (left.toString !== Object.prototype.toString) {\n      return left.toString() === right.toString();\n    }\n\n    const leftKeys = Object.keys(left);\n    const rightKeys = Object.keys(right);\n\n    if (leftKeys.length !== rightKeys.length) {\n      return false;\n    }\n\n    for (let index = leftKeys.length; index-- !== 0; ) {\n      if (!Object.prototype.hasOwnProperty.call(right, leftKeys[index])) {\n        return false;\n      }\n    }\n\n    for (let index = leftKeys.length; index-- !== 0; ) {\n      const key = leftKeys[index];\n\n      if (key === '_owner' && left.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner.\n        //  _owner contains circular references\n        // and is not needed when comparing the actual elements (and not their owners)\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (!equal(left[key], right[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  if (Number.isNaN(left) && Number.isNaN(right)) {\n    return true;\n  }\n\n  return left === right;\n}\n","import { AnyObject, Primitive } from './types';\n\n/**\n * Checks if the value is of a specified type.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isOfType<T extends Primitive | Function>(type: string) {\n  // eslint-disable-next-line valid-typeof\n  return (value: unknown): value is T => typeof value === type;\n}\n\n/**\n * Checks if the value is a JavaScript function.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const isFunction = isOfType<Function>('function');\n\n/**\n * Check if the value is null.\n */\nexport const isNull = (value: unknown): value is null => {\n  return value === null;\n};\n\n/**\n * Checks if the input is a regular expression.\n */\nexport const isRegex = (value: unknown): value is RegExp => {\n  return Object.prototype.toString.call(value).slice(8, -1) === 'RegExp';\n};\n\n/**\n * Checks if the value is an object.\n */\nexport const isObject = (value: unknown): value is AnyObject => {\n  return !isUndefined(value) && !isNull(value) && (isFunction(value) || typeof value === 'object');\n};\n\n/**\n * Checks if the value is undefined.\n */\nexport const isUndefined = isOfType<undefined>('undefined');\n"],"mappings":"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","names":[]}