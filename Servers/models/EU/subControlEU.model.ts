import {
  Column,
  DataType,
  ForeignKey,
  Model,
  Table,
} from "sequelize-typescript";
import { ControlStructEUModel } from "./controlStructEU.model";
import { UserModel } from "../../domain.layer/models/user/user.model";
import { StatusCompliance, STATUSES_COMPLIANCE } from "../../types/status.type";

/*

This is the new Subcontrol model(Schema) and will be replaced with the new one.
Please align other files with this

*/
export type SubcontrolEU = {
  id?: number; // auto generated by database
  status?: StatusCompliance; // won't get any values, will be filled by user
  approver?: number; // won't get any values, will be filled by user
  risk_review?: "Acceptable risk" | "Residual risk" | "Unacceptable risk"; // won't get any values, will be filled by user
  owner?: number; // won't get any values, will be filled by user
  reviewer?: number; // won't get any values, will be filled by user
  due_date?: Date; // won't get any values, will be filled by user
  implementation_details?: string; // won't get any values, will be filled by user
  evidence_description?: string; // won't get any values, will be filled by user
  feedback_description?: string; // won't get any values, will be filled by user
  evidence_files?: Object[]; // fill be filed automatically when a file is uploaded
  feedback_files?: Object[]; // fill be filed automatically when a file is uploaded
  control_id: number; // when control is created, its id will be stored and assign here as FK
  subcontrol_meta_id: number;
  created_at?: Date;
};

@Table({
  tableName: "subcontrols_eu",
})
export class SubcontrolEUModel extends Model<SubcontrolEU> {
  @Column({
    type: DataType.INTEGER,
    autoIncrement: true,
    primaryKey: true,
  })
  id?: number;

  @ForeignKey(() => UserModel)
  @Column({
    type: DataType.INTEGER,
  })
  approver?: number;

  @Column({
    // define ENUM constraint at DB level
    type: DataType.ENUM(...STATUSES_COMPLIANCE),
  })
  status?: StatusCompliance;

  @Column({
    type: DataType.ENUM(
      "Acceptable risk",
      "Residual risk",
      "Unacceptable risk"
    ),
  })
  risk_review?: "Acceptable risk" | "Residual risk" | "Unacceptable risk";

  @ForeignKey(() => UserModel)
  @Column({
    type: DataType.INTEGER,
  })
  owner?: number;

  @ForeignKey(() => UserModel)
  @Column({
    type: DataType.INTEGER,
  })
  reviewer?: number;

  @Column({
    type: DataType.DATE,
  })
  due_date?: Date;

  @Column({
    type: DataType.STRING,
  })
  implementation_details?: string;

  @Column({
    type: DataType.STRING,
  })
  evidence_description?: string;

  @Column({
    type: DataType.STRING,
  })
  feedback_description?: string;

  @Column({
    type: DataType.JSONB,
  })
  evidence_files?: {
    id: string;
    fileName: string;
    project_id: number;
    uploaded_by: number;
    uploaded_time: Date;
  }[];

  @Column({
    type: DataType.JSONB,
  })
  feedback_files?: {
    id: string;
    fileName: string;
    project_id: number;
    uploaded_by: number;
    uploaded_time: Date;
  }[];

  @ForeignKey(() => ControlStructEUModel)
  @Column({
    type: DataType.INTEGER,
  })
  control_id!: number;

  @ForeignKey(() => SubcontrolEUModel)
  @Column({
    type: DataType.INTEGER,
  })
  subcontrol_meta_id!: number;

  @Column({
    type: DataType.BOOLEAN,
    allowNull: false,
    defaultValue: false,
  })
  is_demo?: boolean;

  @Column({
    type: DataType.DATE,
  })
  created_at?: Date;
}
