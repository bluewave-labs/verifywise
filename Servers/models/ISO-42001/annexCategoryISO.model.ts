import {
  Column,
  DataType,
  ForeignKey,
  Model,
  Table,
} from "sequelize-typescript";
import { UserModel } from "../../domain.layer/models/user/user.model";
import { ProjectFrameworksModel } from "../projectFrameworks.model";
import { AnnexCategoryStructISOModel } from "./annexCategoryStructISO.model";
import { Status, STATUSES } from "../../types/status.type";

export type AnnexCategoryISO = {
  id?: number; // auto generated by database
  is_applicable: boolean;
  justification_for_exclusion: string;
  implementation_description: string;
  evidence_links: Object[];
  status: Status;
  owner: number;
  reviewer: number;
  approver: number;
  due_date: Date;
  auditor_feedback: string;
  projects_frameworks_id: number;
  annexcategory_meta_id: number;
  created_at: Date;
  is_demo?: boolean;
};

@Table({
  tableName: "annexcategory_iso",
})
export class AnnexCategoryISOModel extends Model<AnnexCategoryISO> {
  @Column({
    type: DataType.INTEGER,
    autoIncrement: true,
    primaryKey: true,
  })
  id?: number; // auto generated by database

  @Column({
    type: DataType.BOOLEAN,
  })
  is_applicable?: boolean;

  @Column({
    type: DataType.STRING,
  })
  justification_for_exclusion?: string;

  @Column({
    type: DataType.STRING,
  })
  implementation_description?: string;

  @Column({
    type: DataType.JSONB,
  })
  evidence_links?: Object[];

  @Column({
    type: DataType.ENUM(...STATUSES),
  })
  status?: Status;

  @ForeignKey(() => UserModel)
  @Column({
    type: DataType.INTEGER,
  })
  owner?: number;

  @ForeignKey(() => UserModel)
  @Column({
    type: DataType.INTEGER,
  })
  reviewer?: number;

  @ForeignKey(() => UserModel)
  @Column({
    type: DataType.INTEGER,
  })
  approver?: number;

  @Column({
    type: DataType.DATE,
  })
  due_date?: Date;

  @Column({
    type: DataType.STRING,
  })
  auditor_feedback?: string;

  @ForeignKey(() => ProjectFrameworksModel)
  @Column({
    type: DataType.INTEGER,
  })
  projects_frameworks_id?: number;

  @ForeignKey(() => AnnexCategoryStructISOModel)
  @Column({
    type: DataType.INTEGER,
  })
  annexcategory_meta_id?: number;

  @Column({
    type: DataType.DATE,
    defaultValue: DataType.NOW,
  })
  created_at?: Date;

  @Column({
    type: DataType.BOOLEAN,
    defaultValue: false,
  })
  is_demo?: boolean;
}
